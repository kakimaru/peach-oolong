---
import { Image } from "astro:assets";
import spotify from "../lib/spotify"

interface EpisodeById {
  id: string;
  name: string;
  releaseDate: string;
  imageUrl: string;
  audioPreviewUrl: string;
}

const episodeIds = [
  "3I2hPKvbxJvfeugdQzhfmp",
  "2W4ZZAXs3EHas45utQMGhW",
  "0Ji8jaZmDKaHeFgIHtjjDV",
];

const episodesById: EpisodeById[] = await Promise.all(episodeIds.map(async(id) => await spotify.getEpisodeById(id)))

---

{episodesById.map((episode) => (
  <a href={`https://open.spotify.com/episode/${episode.id}`} class="card" target="_blank" rel="noopener noreferrer">
    <Image class="card-image" src={episode.imageUrl} alt={episode.name} inferSize={true}/>
    <div class="card-info">
      <div class="card-text">
        <h3 class="title">{episode.name}</h3>
        <p class="date">{episode.releaseDate}</p>
      </div>
      <audio class="audio" controls src={episode.audioPreviewUrl}></audio>
    </div>
  </a>
))}

<style>
  .card {
    display: flex;
    gap: 16px;
    padding: 24px;
    border: 1px solid #9BA6D5;
    border-radius: 12px;

    background-image: none;
		background-size: 400%;
		border-radius: 7px;
		background-position: 100%;
		transition: background-position 1s cubic-bezier(0.22, 1, 0.36, 1);
		box-shadow: inset 0 2px 4px 0 rgba(255, 255, 255, 0.7);
  }

  .card:is(:hover, :focus-within) {
		background-position: 0;
		background-image: var(--accent-gradient);
    border: 1px solid #FFF1F4;
	}

  .card-image {
    aspect-ratio: 1 / 1;
    object-fit: cover;
    max-width: 34%;
    height: auto;
    border-radius: 8px;
    border: 1px solid white;
  }

  .card-info {
    display: grid;
    gap: 12px;
  }

  .card-text {
    display: grid;
    gap: 4px;
  }

  .title {
    font-size: 14px;
    font-weight: bold;
    transition: color 0.6s cubic-bezier(0.22, 1, 0.36, 1);

  }

  .date {
    font-size: 11px;
    color: #9397AE;
    text-align: right;
  }

  .audio {
    max-width: 100%;
    height: 40px;
    border-radius: 80px;
  }
</style>
<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  gsap.registerPlugin(ScrollTrigger)

  const card = document.querySelectorAll('.card');

  const tl = gsap.timeline({
    scrollTrigger: {
      trigger: card,
      toggleActions: "play none none reverse",
      start: "top 80%",
    },
  })

  tl.fromTo(card,
    {
      y: 50,
      autoAlpha: 0,
    },
    {
      y: 0,
      autoAlpha: 1,
      duration: 0.6,
      stagger: 0.2,
      ease: "back.out",
    }
  )


</script>